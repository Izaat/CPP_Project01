/*
1. Saving the data
2. Display or show all records
3. Search
4. Modify the data or record
5. Deleting some record from file
*/

#include<iostream>
#include<fstream>
using namespace std;

class record {
	int key;
	char data[50]; //size of data
	public:
		void input() {
			cout << "Enter the key\n";
			cin >> key;
			cout << "Enter the data\n";
			cin >> data;
		}
		void show() {
			cout << "\nKey :" << key << "\t" << "data :" << data << endl;
		}
		int rt_key() {
			return key;
		}
};

void menu() {
	cout << "Welcome\n";
	cout << "Please enter option to operate:\n";
	cout << "Press 1: to save record\n";
	cout << "Press 2: to display record\n";
	cout << "Press 3: to search for record\n";
	cout << "Press 4: to modify record\n";
	cout << "Press 5: to delete record\n";
	cout << "Press 6: to EXIT\n";
}

fstream file;

int main() {

	record obj;
	int choice;
	while (1) {
		menu();
		cin >> choice;
		switch (choice) {
			case 1: //Save data
			{
				obj.input();
				file.open("data", ios::out | ios::app | ios::binary);
				file.write((char*)&obj, sizeof(obj));
				file.close();
				system("CLS"); //clear screen
				cout << "Data written successfully\n";
				obj.show();
				system("pause"); //enter key to continue
				break;
			}

			case 2: //Display data
			{
				file.open("data", ios::in | ios::binary);
				while (file.read((char*) &obj, sizeof(obj))) {
					obj.show();
				}
				file.close();
				system("pause");
				break;
			}

			case 3: //Search data
			{
				int keyRecord;
				system("CLS");
				cout << "Enter the record you want to search: ";
				cin >> keyRecord;
				file.open("data", ios::in | ios::binary);
				int flag = 0;
				while (file.read((char*)&obj, sizeof(obj))) {
					if (obj.rt_key() == keyRecord) {
						obj.show();
						break;
					}
					else
						flag = 1; //flag=1 if record not found
				}

				file.close();
				if (flag == 1) cout << "Sorry record not found...";
					system("pause");
				
				system("pause");
				break;
			}

			case 4: //Modify data
			{
				int keyRecord;
				system("CLS");
				cout << "Enter the key you want to modify: ";
				cin >> keyRecord;
				file.open("data", ios::in | ios::out | ios::binary);
				int flag = 0;
				char ch;
				while (file.read((char*)&obj, sizeof(obj))) {
					if (obj.rt_key() == keyRecord) {
						obj.show();
						flag = 0; //resetting the flag
						break;
					}
					else
						flag = 1; //flag=1 if record not found
				}
				if (flag == 0) {
					cout << "key found with following details\n";
					obj.show();
					cout << "Do you still want to edit? y/n :";
					cin >> ch;
					if (ch=='y' || ch=='Y') {
						//Find the starting point of data
						/*ERROR: file.seekp(-1*sizeof(obj), ios::cur);
						Both gcc and VS give warnings here. 
						The reason you get error under VS is because you probably have enabled /WX option which treats warnings as errors. 
						The simple solution is to cast sizeof(obj) to int before any multiplication. */
						file.seekp(-1*static_cast<int>(sizeof(obj)), ios::cur);
						obj.input(); //initialize the object with new data
						file.write((char*)&obj, sizeof(obj));
					}
				}

				else cout << "Sorry record not found...\n";
				system("pause");
				break;
			}

			case 5: //Delete data
			{
				int keyRecord;
				system("CLS");
				cout << "Enter the record you want to delete: ";
				cin >> keyRecord;
				file.open("data", ios::in | ios::binary);
				int flag = 0;
				while (file.read((char*)&obj, sizeof(obj)))
				{
					if (obj.rt_key() == keyRecord)
					{
						flag = 0; // record found
						break;
					}
					else
						flag = 1;  // no record found
				}
				ofstream tfile("databkp");
				if (flag == 0)
				{
					file.seekg(0);
					while (file.read((char*)&obj, sizeof(obj)))
					{
						if (obj.rt_key() != keyRecord)
						{
							tfile.write((char*)&obj, sizeof(obj));
						}
					}
				}
				else cout << "data not found...\n";
				file.close();
				tfile.close();
				remove("data");
				rename("databkp", "data");
				cout << "Data deleted succesfully...\n";
				break;
			}

			case 6:
			{
				exit(0); // to exit from menu
			}

			default:
				cout << "Please enter the valid option\n";
		} //switch
	} //while

	return 0;
} //int main
